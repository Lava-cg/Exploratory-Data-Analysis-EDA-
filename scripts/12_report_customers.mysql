/* Customer reports

1. Gathers essential fields such as names, ages, and transaction details. --
2. Segments customers into categories (VIP, Regular, New) and age groups.
3. Aggregates customer-level metrics:
	   -- total orders
	   -- total sales
	   -- total quantity purchased
	   -- total products
	   -- lifespan (in months)
4. Calculates valuable KPIs:
	    -- recency (months since last order)
		-- average order value
		-- average monthly spend
  */
/* -- Create Report: gold.report_customers */


CREATE VIEW  gold_report_customers AS
        
WITH base_query AS 
--  Base Query: Retrieves core columns from tables
(
SELECT 
f.order_number,
f.product_key,
f.order_date,
f.sales_amount,
f.quantity,
c.customer_key,
c.customer_number,
concat(c.first_name, ' ', c.last_name)  customer_name,
timestampdiff(year, c.birthdate, now())  age
FROM gold_fact_sales F 
left join gold_dim_customers c
ON f.customer_key = c.customer_key
)

, customer_aggregation AS 
-- Customer Aggregations: Summarizes key metrics at the customer level
(
SELECT 
	customer_key,
	customer_number,
	customer_name,
	age,
	count(distinct order_number) total_orders,
	sum(sales_amount) Total_sales,
	sum(quantity) total_quantity,
	count(DISTINCT product_key) total_products,
    max(order_date) last_order_date,
	timestampdiff(month, min(order_date), max(order_date))  life_span
from base_query
GROUP BY customer_key, customer_number, customer_name, age
)

SELECT 
customer_key,
customer_number,
customer_name,
age,
    CASE 
	 WHEN age < 20 THEN 'Under 20'
	 WHEN age between 20 and 29 THEN '20-29'
	 WHEN age between 30 and 39 THEN '30-39'
	 WHEN age between 40 and 49 THEN '40-49'
	 ELSE '50 and above'
END AS age_group,

    CASE
	WHEN total_sales > 5000 and Total_sales >= 12 then 'VIP'
	WHEN total_sales <= 5000 and Total_sales >= 12 THEN 'Regular'
	ELSE 'NEW'
END customer_segment,
last_order_date,
timestampdiff(month, last_order_date, now() ) AS recency,
total_orders,
Total_sales,
total_quantity,
total_products,
life_span,
-- Compuate average order value (AVO)
CASE WHEN total_sales = 0 THEN 0
	ELSE ROUND(total_sales/total_orders)
END as avg_order_value,
-- Compuate average monthly spend
CASE WHEN total_sales = 0 THEN 0
	ELSE ROUND(total_sales/life_span)
END avg_monthly_spend
from customer_aggregation;
