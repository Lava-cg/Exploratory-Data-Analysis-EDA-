/*
===============================================================================
Data Segmentation Analysis
===============================================================================
Purpose:
    - To group data into meaningful categories for targeted insights.
    - For customer segmentation, product categorization, or regional analysis.

SQL Functions Used:
    - CASE: Defines custom segmentation logic.
    - GROUP BY: Groups data into segments.
===============================================================================
*/
-- segment products into cost ranges and count how many products fall into each segment

WITH Product_segment AS (
SELECT 
product_key,
product_name,
cost,
CASE WHEN cost < 100 THEN 'Below 100'
	WHEN cost BETWEEN 100 and 500 THEN '100-500'
    WHEN cost BETWEEN 500 and 1000 THEN '500-1000'
    ELSE 'Above 1000'
END cost_range
from gold_dim_products)

select 
cost_range,
count(product_key) as total_products
from Product_segment
GROUP BY cost_range
ORDER BY total_products desc;


-- task 2
-- / * Group customers into three segments based on their speding behavior:
-- VIP: customers with at least 12 months of history and spedning more than $5000.
-- Regular: customers with atleast 12 months of history but spending $5000 or less.
-- New: Customers with a lifespan less than 12 months.
-- and find the total number of customers by each group
-- */ 

WITH customer_spending AS 
(
SELECT 
customer_key,
min(order_date) as first_order,
max(order_date) as last_order,
sum(sales_amount) as total_sales,
TIMESTAMPDIFF(MONTH, min(order_date), max(order_date)) as timespan
from gold_fact_sales
GROUP BY customer_key
)

SELECT 
customer_segment,
count(customer_segment) as Total_customers from 
(
SELECT customer_key,
timespan,
case
	WHEN total_sales > 5000 and timespan >= 12 then 'VIP'
	WHEN total_sales <= 5000 and timespan >= 12 THEN 'Regular'
	ELSE 'NEW'
END customer_segment
FROM customer_spending
)t
GROUP BY customer_segment
ORDER BY Total_customers desc;
